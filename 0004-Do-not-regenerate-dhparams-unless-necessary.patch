From 78611404d3e1d97fd0055b97884e47b7c519813c Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Wed, 6 Dec 2017 14:31:11 -0800
Subject: [PATCH] Do not regenerate dhparams unless necessary

DH params were generated by ./configure in include/dh.h. Add test to
determine whether the file already exists before re-running openssl to
create it. Include a pre-generated copy so that builds will be
reproducible.

Signed-off-by: Brett T. Warden <brett.t.warden@intel.com>
---
 .gitignore   |  1 -
 configure    |  2 +-
 include/dh.h | 41 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 42 insertions(+), 2 deletions(-)
 create mode 100644 include/dh.h

diff --git a/.gitignore b/.gitignore
index 21339e3..a872651 100644
--- a/.gitignore
+++ b/.gitignore
@@ -3,7 +3,6 @@ config.log
 config.status
 include/config.h
 include/common.h
-include/dh.h
 nrpe.spec
 paths
 uninstall
diff --git a/configure b/configure
index 5c7a908..774de60 100755
--- a/configure
+++ b/configure
@@ -7721,7 +7721,7 @@ fi
 			$as_echo "#define USE_SSL_DH 1" >>confdefs.h
 
 			# Generate DH parameters
-			if test -f "$sslbin"; then
+			if test -f "$sslbin" && ! test -f "include/dh.h"; then
 				echo ""
 				echo "*** Generating DH Parameters for SSL/TLS ***"
 				# awk to strip off meta data at bottom of dhparam output
diff --git a/include/dh.h b/include/dh.h
new file mode 100644
index 0000000..c56c7d2
--- /dev/null
+++ b/include/dh.h
@@ -0,0 +1,41 @@
+#ifndef HEADER_DH_H
+#include <openssl/dh.h>
+#endif
+DH *get_dh2048()
+	{
+	static unsigned char dh2048_p[]={
+		0xDB,0x0D,0x89,0x40,0x12,0x49,0xD9,0x6F,0xDC,0x35,0xD5,0x10,
+		0x27,0xF2,0x1A,0xD2,0x1E,0xBE,0x77,0x6F,0xB1,0xAD,0xEF,0x4A,
+		0x35,0x6D,0x8F,0xE1,0xF9,0x04,0x11,0x7D,0x27,0x85,0xD2,0x76,
+		0x06,0x6D,0x0A,0xCA,0x43,0x02,0x83,0xCC,0x91,0xCA,0x32,0x0C,
+		0x2B,0xA8,0xB4,0x37,0x6A,0xC2,0x0C,0xD4,0x3B,0xAC,0xF5,0x46,
+		0x4C,0x3C,0xC8,0xC6,0x6E,0xD1,0xC5,0xF4,0x64,0xEA,0x86,0x80,
+		0x09,0x28,0xE7,0xD6,0x9B,0x7C,0x01,0x58,0x23,0x96,0xF9,0x62,
+		0xA2,0xA8,0x34,0xC2,0xAC,0xA4,0x58,0x47,0xC6,0x94,0x58,0x1D,
+		0x58,0x52,0x22,0xF2,0x8F,0xE1,0x0B,0xC7,0xBE,0xC7,0x12,0xC3,
+		0x19,0x54,0xF6,0x99,0x84,0x7D,0x4A,0x9C,0x98,0x8D,0xF3,0x49,
+		0x34,0x6A,0xF1,0x94,0xDB,0x34,0x84,0xB9,0x2D,0x89,0x56,0xF5,
+		0x0F,0xAC,0x7D,0x5B,0x9B,0xF5,0xCB,0x3A,0x2C,0x6B,0x98,0xBF,
+		0xCB,0xA2,0xB9,0x25,0x15,0xB3,0x6E,0xA5,0xAE,0xF6,0x1A,0xC3,
+		0xF0,0xD2,0xF4,0x63,0x53,0x24,0x57,0x69,0xE9,0xC7,0x34,0xC8,
+		0x34,0xCD,0x66,0x76,0x28,0xDA,0xAD,0x99,0xC6,0x89,0xA8,0x09,
+		0x27,0x24,0x9B,0xC4,0xA9,0x84,0x03,0xF0,0x52,0xC6,0xF5,0x9B,
+		0x63,0xE4,0xF5,0xAB,0x09,0xBB,0x03,0x87,0x23,0xCC,0x8D,0x1B,
+		0x50,0xDD,0x23,0xE9,0x23,0xBE,0x17,0x62,0x14,0x86,0x8C,0xE8,
+		0xA3,0x31,0xDA,0xC0,0x23,0x02,0xC4,0x45,0xDF,0x3C,0x3B,0x19,
+		0xE8,0xB6,0x03,0x1B,0x3F,0x52,0x20,0x5B,0xE9,0xA8,0xD8,0xDC,
+		0xDF,0x07,0x3B,0x46,0xFA,0xC4,0x5E,0x68,0x81,0xF7,0xBA,0xA7,
+		0xFC,0xC4,0xF7,0x3B,
+		};
+	static unsigned char dh2048_g[]={
+		0x02,
+		};
+	DH *dh;
+
+	if ((dh=DH_new()) == NULL) return(NULL);
+	dh->p=BN_bin2bn(dh2048_p,sizeof(dh2048_p),NULL);
+	dh->g=BN_bin2bn(dh2048_g,sizeof(dh2048_g),NULL);
+	if ((dh->p == NULL) || (dh->g == NULL))
+		{ DH_free(dh); return(NULL); }
+	return(dh);
+	}
-- 
2.15.1

