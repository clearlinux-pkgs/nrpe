From 78611404d3e1d97fd0055b97884e47b7c519813c Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Wed, 6 Dec 2017 14:31:11 -0800
Subject: [PATCH] Do not regenerate dhparams unless necessary

DH params were generated by ./configure in include/dh.h. Add test to
determine whether the file already exists before re-running openssl to
create it. Include a pre-generated copy so that builds will be
reproducible.

Signed-off-by: Brett T. Warden <brett.t.warden@intel.com>
---
 .gitignore   |  1 -
 configure    |  2 +-
 include/dh.h | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 50 insertions(+), 2 deletions(-)
 create mode 100644 include/dh.h

diff --git a/.gitignore b/.gitignore
index 21339e3..a872651 100644
--- a/.gitignore
+++ b/.gitignore
@@ -3,7 +3,6 @@ config.log
 config.status
 include/config.h
 include/common.h
-include/dh.h
 nrpe.spec
 paths
 uninstall
diff --git a/configure b/configure
index 5c7a908..774de60 100755
--- a/configure
+++ b/configure
@@ -7721,7 +7721,7 @@ fi
 			$as_echo "#define USE_SSL_DH 1" >>confdefs.h
 
 			# Generate DH parameters
-			if test -f "$sslbin"; then
+			if test -f "$sslbin" && ! test -f "include/dh.h"; then
 				echo ""
 				echo "*** Generating DH Parameters for SSL/TLS ***"
 				# awk to strip off meta data at bottom of dhparam output
diff --git a/include/dh.h b/include/dh.h
new file mode 100644
index 0000000..98d1683
--- /dev/null
+++ b/include/dh.h
@@ -0,0 +1,49 @@
+static DH *get_dh2048(void)
+{
+    static unsigned char dhp_2048[] = {
+        0xE1, 0x39, 0xB7, 0xB9, 0xAD, 0xFF, 0x63, 0xA3, 0x0B, 0x55,
+        0x23, 0x31, 0xA4, 0xCA, 0x72, 0xC7, 0x92, 0x2E, 0xC2, 0x65,
+        0x89, 0xD2, 0xCD, 0x7B, 0xCF, 0x70, 0x55, 0xED, 0x24, 0xC5,
+        0xFA, 0x55, 0x49, 0x36, 0x23, 0x8F, 0x74, 0x12, 0xD5, 0x99,
+        0x6B, 0x91, 0x92, 0x14, 0x3C, 0xCA, 0xCA, 0xDC, 0xA5, 0xEF,
+        0x90, 0x70, 0x16, 0x09, 0xC3, 0xF7, 0x35, 0xB9, 0xB9, 0x67,
+        0xF2, 0x6C, 0xE1, 0x4F, 0x25, 0xCD, 0x91, 0xB4, 0x68, 0xBE,
+        0xF8, 0x05, 0x51, 0x68, 0xC3, 0xDF, 0x77, 0x61, 0xB5, 0x4A,
+        0x01, 0xE3, 0xD9, 0x44, 0x03, 0x96, 0xB3, 0x69, 0x76, 0x6B,
+        0x15, 0x8E, 0x18, 0xCF, 0xDC, 0x73, 0x3D, 0x1C, 0x02, 0x8B,
+        0x6A, 0x6D, 0x91, 0x9A, 0x08, 0xC2, 0x83, 0xFC, 0xB1, 0x2A,
+        0xA1, 0x25, 0x2D, 0x53, 0x56, 0x25, 0xA8, 0x57, 0x28, 0x53,
+        0xAC, 0x39, 0x6F, 0xB2, 0x2E, 0x56, 0xBD, 0xB4, 0x95, 0x61,
+        0xC5, 0x28, 0x8A, 0x55, 0xC3, 0x73, 0xE1, 0x70, 0x62, 0xB8,
+        0xD5, 0x35, 0x71, 0xF4, 0xD7, 0x8E, 0x30, 0x1E, 0xF6, 0x66,
+        0x64, 0x31, 0x25, 0x3A, 0x26, 0x44, 0x9F, 0xDD, 0x69, 0xE2,
+        0x5A, 0x63, 0xF9, 0x2E, 0x2C, 0x03, 0x45, 0x37, 0x86, 0x52,
+        0xEF, 0x48, 0xB7, 0xC8, 0x31, 0xE1, 0xB4, 0xB9, 0x0D, 0x01,
+        0x3B, 0xF5, 0xF3, 0x70, 0x56, 0x27, 0xFD, 0x6B, 0xC3, 0x05,
+        0xF2, 0x99, 0x57, 0x4C, 0xF2, 0x21, 0x24, 0x87, 0x37, 0x55,
+        0xF0, 0x93, 0x5C, 0xC8, 0xDD, 0x51, 0x85, 0x72, 0x98, 0x70,
+        0x9F, 0xF8, 0x8D, 0x0A, 0x9E, 0xCA, 0x79, 0xBA, 0x2E, 0x34,
+        0x96, 0x63, 0x51, 0x2D, 0x79, 0xF6, 0xD8, 0xC9, 0x12, 0x08,
+        0x08, 0x61, 0x04, 0xA7, 0xBF, 0xDB, 0x54, 0x4E, 0x7D, 0x2F,
+        0x0C, 0x21, 0xAD, 0xB8, 0xF7, 0x4E, 0x86, 0x52, 0x78, 0xD8,
+        0xE3, 0x90, 0xB1, 0xC1, 0xB0, 0xF3
+    };
+    static unsigned char dhg_2048[] = {
+        0x02
+    };
+    DH *dh = DH_new();
+    BIGNUM *p, *g;
+
+    if (dh == NULL)
+        return NULL;
+    p = BN_bin2bn(dhp_2048, sizeof(dhp_2048), NULL);
+    g = BN_bin2bn(dhg_2048, sizeof(dhg_2048), NULL);
+    if (p == NULL || g == NULL
+            || !DH_set0_pqg(dh, p, NULL, g)) {
+        DH_free(dh);
+        BN_free(p);
+        BN_free(g);
+        return NULL;
+    }
+    return dh;
+}
-- 
2.19.1

